<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Student Details</title>
  <script src="https://js.stripe.com/v3/"></script>
  <style>
    
  
    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }
  
    h1 {
      text-align: center;
      margin-bottom: 30px;
      color: #2581DC;
    }
  
    .student-details-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      padding: 20px;
      margin-bottom: 20px;
    }
  
    .student-details {
      flex: 1;
      padding-right: 20px; /* Adjust spacing between image and details */
    }
  
    .student-details p {
      margin: 10px 0;
    }
  
    .student-image {
      flex: 1;
      text-align: center;
    }
  
    .student-image img {
      max-width: 100%;
      border-radius: 8px;
    }
  
    #payment-form {
      max-width: 700px;
      margin: 20px auto;
      padding: 50px;
      background-color: white;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
  
    #payment-element {
      margin-bottom: 20px;
    }
  
    #submit {
      display: block;
      width: 100%;
      padding: 10px;
      background-color: #2581DC;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
    }
  
    #submit:hover {
      background-color: #135CA9;
    }
  
    .spinner {
      border: 4px solid rgba(255, 255, 255, 0.3);
      border-top: 4px solid white;
      border-radius: 50%;
      width: 30px;
      height: 30px;
      animation: spin 1s linear infinite;
      margin-right: 10px;
      display: inline-block;
    }
  
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  
    .hidden {
      display: none;
    }
    body{
    margin: 0;
     padding: 0;
     font-family: 'Roboto', sans-serif;
}
 .navigation {
     height: 55px;
     background: linear-gradient(45deg, #4199fe, #74b4fe);
}
.card{
margin-left:620px;
margin-top:50px;
}

 .brand {
     position: absolute;
     padding-left: 20px;
     float: left;
     line-height: 55px;
     text-transform: uppercase;
     font-size: 1.4em;
}
 .brand a, .brand a:visited {
     color: #ffffff;
     text-decoration: none;
}
 .nav-container {
     max-width: 1000px;
     margin: 0 auto;
}
 nav {
     float: right;
}
 nav ul {
     list-style: none;
     margin: 0;
     padding: 0;
}
 nav ul li {
     float: left;
     position: relative;
}
 nav ul li a,nav ul li a:visited {
     display: block;
     padding: 0 20px;
     line-height: 55px;
     color: #fff;
     background: #262626 ;
     text-decoration: none;
}
 nav ul li a{
     background: transparent;
     color: #FFF;
}
 nav ul li a:hover, nav ul li a:visited:hover {
     background: #2581DC;
     color: #ffffff;
}
 .navbar-dropdown li a{
     background: #2581DC;
}
 nav ul li a:not(:only-child):after, nav ul li a:visited:not(:only-child):after {
     padding-left: 4px;
     content: ' \025BE';
}
 nav ul li ul li {
     min-width: 190px;
}
 nav ul li ul li a {
     padding: 15px;
     line-height: 20px;
}
 .navbar-dropdown {
     position: absolute;
     display: none;
     z-index: 1;
     background: #fff;
     box-shadow: 0 0 35px 0 rgba(0,0,0,0.25);
}
/* Mobile navigation */
 .nav-mobile {
     display: none;
     position: absolute;
     top: 0;
     right: 0;
     background: transparent;
     height: 55px;
     width: 70px;
}
  </style>
</head>
<body>
  <section class="navigation">
    <div class="nav-container">
      <div class="brand">
        <a href="#!">Bus Fees Payment Portal</a>
      </div>
      
    </div>
  </section>
  <div class="container">
    <div class="student-details-container">
      <div class="student-details">
        <h1 style="margin-right:135px">Student Details</h1>
        
        <p><strong>Name:</strong> <%= student.name %></p>
        <p><strong>Roll Number:</strong> <%= student.rollNumber %></p>
        <p><strong>Home Address:</strong> <%= student.homeAddress %></p>
        <p><strong>Destination:</strong> <%= student.destination %></p>
        <p><strong>Bus Fee:</strong> <%= student.busFee %></p>
        <p><strong>Is Paid:</strong> <%= student.isPaid ? 'Yes' : 'No' %></p>
        
      </div>
      <div class="student-image">
        <img src="https://logowik.com/content/uploads/images/student5651.jpg" alt="Bus Image">
      </div>
    </div>
  
    <form id="payment-form">
      <div id="payment-element"></div>
      <button id="submit">
        <div class="spinner hidden" id="spinner"></div>
        <span id="button-text">Pay now</span>
      </button>
      <div id="payment-message" class="hidden"></div>
    </form>
  </div>
</body>
<script>
  // This is your test publishable API key.
const stripe = Stripe("pk_test_51NxiJlSIDBjc3MxT8rVMzlzCqxPwL6Mfz3YPIDcrzzSYijju4yTG7gFPMg2E171fpl61tqqpqYVHjoKYpxFrJa2s00G8KYBY22");

// The items the customer wants to buy
const items = [{ id: "xl-tshirt" }];

let elements;

initialize();
checkStatus();

document
  .querySelector("#payment-form")
  .addEventListener("submit", handleSubmit);

// Fetches a payment intent and captures the client secret
async function initialize() {
  const response = await fetch("/create-payment-intent", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ items }),
  });
  const { clientSecret } = await response.json();

  const appearance = {
    theme: 'stripe',
  };
  elements = stripe.elements({ appearance, clientSecret });

  const paymentElementOptions = {
    layout: "tabs",
  };

  const paymentElement = elements.create("payment", paymentElementOptions);
  paymentElement.mount("#payment-element");
}

async function handleSubmit(e) {
  e.preventDefault();
  console.log("Hello")
  setLoading(true);

  const { error, } = await stripe.confirmPayment({
    elements,

    confirmParams: {
     
      return_url: "http://localhost:3000/payment/checkout",
    },
  });

 


  if (error.type === "card_error" || error.type === "validation_error") {
    showMessage(error.message);
  } else {
    console.log(error.message)
    showMessage("An unexpected error occurred.");
  }

  setLoading(false);
  const response = await fetch("/success-payment", {
    method: "GET",
  });
}

// Fetches the payment intent status after payment submission
async function checkStatus() {
  const clientSecret = new URLSearchParams(window.location.search).get(
    "payment_intent_client_secret"
  );

  if (!clientSecret) {
    return;
  }

  const { paymentIntent } = await stripe.retrievePaymentIntent(clientSecret);

  switch (paymentIntent.status) {
    case "succeeded":
      showMessage("Payment succeeded!");
      console.log("Success")
      break;
    case "processing":
      showMessage("Your payment is processing.");
      break;
    case "requires_payment_method":
      showMessage("Your payment was not successful, please try again.");
      break;
    default:
      showMessage("Something went wrong.");
      break;
  }
}

// ------- UI helpers -------

function showMessage(messageText) {
  const messageContainer = document.querySelector("#payment-message");

  messageContainer.classList.remove("hidden");
  messageContainer.textContent = messageText;

  setTimeout(function () {
    messageContainer.classList.add("hidden");
    messageContainer.textContent = "";
  }, 4000);
}

// Show a spinner on payment submission
function setLoading(isLoading) {
  if (isLoading) {
    // Disable the button and show a spinner
    document.querySelector("#submit").disabled = true;
    document.querySelector("#spinner").classList.remove("hidden");
    document.querySelector("#button-text").classList.add("hidden");
  } else {
    document.querySelector("#submit").disabled = false;
    document.querySelector("#spinner").classList.add("hidden");
    document.querySelector("#button-text").classList.remove("hidden");
  }
}
</script>
</html>
